---
services: docker

env:
  - distro: centos6
    init: /sbin/init
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  # Pull container.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'
  
  #Print out test file
  # - 'docker exec "$(cat ${container_id})" /etc/ansible/roles/role_under_test/tests/test.yml'
  
  # Test role. 
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Make sure php is installed.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm php -v'

#notifications:
#  webhooks: https://galaxy.ansible.com/api/v1/notifications/
notifications:
  slack:
    rooms:
      - gbckenya:YmOMhqL9O6UHSSG1vrdkQXkL#general
      - gbckenya:YmOMhqL9O6UHSSG1vrdkQXkL#ansible
